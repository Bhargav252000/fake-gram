{"version":3,"sources":["AnimatedText/AnimatedText.module.css","firebase/config.js","contexts/AuthContext.js","AnimatedText/AnimatedText.js","components/SignUp.js","components/Login.js","components/UpdateProfile.js","components/PrivateRoute.js","components/Title.js","hooks/useStorage.js","components/ProgressBar.js","components/UploadForm.js","hooks/useFirestore.js","components/ImageGrid.js","components/Modal.js","components/DashBoard.js","components/ForgotPassword.js","App.js","index.js"],"names":["module","exports","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","auth","timestamp","FieldValue","serverTimestamp","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signin","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","AnimatedText","textColor","overlayColor","props","containerElem","useRef","initialMousePos","x","y","mousePos","setMousePos","className","classes","animatedTextContainer","style","onMouseMove","event","nativeEvent","elem","current","newX","offsetX","clientWidth","newY","offsetY","clientHeight","onMouseOut","ref","color","animatedTextContent","aria-hidden","animatedTextContentClone","buttonVariants","hover","scale","transition","duration","textShadow","boxShadow","containerVariants","hidden","opacity","visible","type","delay","exit","ease","Signup","emailRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","push","bg","Card","variants","initial","animate","Body","margin","borderRadius","width","Alert","variant","Form","onSubmit","maxWidth","Group","id","Label","Control","required","button","disabled","whileHover","whileTap","to","Login","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","PrivateRoute","Component","component","rest","render","Title","useStorage","file","progress","setProgress","url","setUrl","storageRef","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","createdAt","add","ProgressBar","setFile","div","labelStyle","display","height","border","lineHeight","fontWeight","fontSize","UploadForm","types","onChange","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","data","ImageGrid","setSelectedImage","map","layout","key","onClick","docUrl","classList","contains","handleClick","title","delete","deleteItem","img","src","alt","Modal","selectedImage","zIndex","DashBoard","Grid","container","items","xs","ForgotPasaword","message","setMessage","App","exitBeforeEnter","Container","minHeight","fontFamily","basename","exact","path","ForgotPassword","ReactDOM","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.ecb56672.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"animatedTextContainer\":\"AnimatedText_animatedTextContainer__38KJy\",\"animatedTextContent\":\"AnimatedText_animatedTextContent__2Oi5e\",\"animatedTextContentClone\":\"AnimatedText_animatedTextContentClone__z9jFa AnimatedText_animatedTextContent__2Oi5e\"};","import * as firebase from 'firebase/app'\r\nimport 'firebase/storage'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n  };\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst auth = firebase.auth();\r\n\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectStorage, projectFirestore, timestamp, auth };\r\n\r\n\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { auth } from '../firebase/config'\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n\r\n    const [currentUser, setCurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    function signin(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email,password){\r\n        return auth.signInWithEmailAndPassword(email,password)\r\n    }\r\n\r\n    function logout(){\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password){\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n    \r\n    \r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signin,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport classes from \"./AnimatedText.module.css\";\r\nimport '../index.css'\r\n\r\nconst AnimatedText = ({ textColor, overlayColor, children, ...props }) => {\r\n    \r\n    const containerElem = useRef(null);\r\n    const initialMousePos = { x: 0, y: 0 };\r\n    \r\n    const [mousePos, setMousePos] = useState(initialMousePos);\r\n\r\n    const handleMouseMove = (event) => {\r\n        event = event.nativeEvent;\r\n        const elem = containerElem.current;\r\n        const newX = (event.offsetX / elem.clientWidth) * 100;\r\n        const newY = (event.offsetY / elem.clientHeight) * 100;\r\n        const newMousePos = {\r\n            x: newX,\r\n            y: newY\r\n        };\r\n        setMousePos(newMousePos);\r\n    }\r\n\r\n    \r\n    const handleMouseOut = () => setMousePos(initialMousePos);\r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <section\r\n            className = {classes.animatedTextContainer}\r\n            style={{\r\n                \"--maskX\": mousePos.x,\r\n                \"--maskY\": mousePos.y\r\n            }}\r\n            onMouseMove = {handleMouseMove}\r\n            onMouseOut = {handleMouseOut}\r\n            ref = {containerElem}            \r\n            {...props}\r\n        >\r\n            <h1\r\n                style={{color : textColor}}\r\n                className = {classes.animatedTextContent}\r\n            >\r\n                {children}\r\n            </h1>\r\n            <h1\r\n                aria-hidden={true}\r\n                style={{color: overlayColor}}\r\n                className={classes.animatedTextContentClone}\r\n            >\r\n                {children}\r\n            </h1>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport { AnimatedText };\r\n","import React, { useRef, useState } from 'react'\r\nimport { Card, Form, Alert } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { motion } from 'framer-motion'\r\nimport { AnimatedText } from '../AnimatedText/AnimatedText'\r\nimport ParticlesBg from 'particles-bg'\r\n\r\n\r\nconst buttonVariants = {\r\n    hover:{\r\n        scale:1.06,\r\n        transition: {\r\n            duration:0.3,\r\n        },\r\n        textShadow: \"0px 0px 8px rgb(255,255,255)\",\r\n        boxShadow:\"0px 0px 8px rgb(255,255,255)\",\r\n    }\r\n}\r\n\r\n\r\nconst containerVariants = {\r\n    hidden: {\r\n        x: '100vw',\r\n        opacity: 0\r\n    },\r\n    visible: {\r\n        opacity:1,\r\n        x:0,\r\n        transition:{\r\n            type:\"spring\",\r\n            delay: 0.5\r\n        }\r\n    },\r\n    exit:{\r\n        x: '-100vh',\r\n        transition:{\r\n            ease: 'easeInOut'\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default function Signup() {\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n\r\n    const { signin } = useAuth();\r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Passwords do not match\")\r\n        }\r\n\r\n        try{\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await signin(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to Create An Account')\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <ParticlesBg color=\"#ffa62b\" type=\"cobweb\" bg={true}/>\r\n            <div className=\"heading\" style={{opacity:\"0.7\"}}>\r\n                <AnimatedText\r\n                    textColor = \"#ff4a4a\"\r\n                    overlayColor = \"#ffa62b\"\r\n                >\r\n                    FakeGram\r\n                </AnimatedText>\r\n            </div>\r\n            <motion.Card\r\n                variants={containerVariants}\r\n                initial= \"hidden\"\r\n                animate= \"visible\"\r\n                exit=\"exit\"\r\n            >\r\n                <Card.Body style={{margin:\"auto\",borderRadius: \"15px\", boxShadow:\"5px 3px 8px rgba(0, 0,0, 0.5)\",width:\"550px\" }}>\r\n                    <h2 className= \"text-center mb-4\" style={{color: \"#4e4e4e\"}}>Sign Up</h2>\r\n    \r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit = {handleSubmit} style={{maxWidth: \"450px\"}}>\r\n                        <Form.Group id=\"email\"> \r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\"> \r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\"> \r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                        </Form.Group>\r\n                        <motion.button disabled={loading} className=\"w-100\" type=\"submit\"\r\n                            variants={buttonVariants}\r\n                            whileHover = \"hover\"\r\n                            whileTap={{ scale: 0.9, x: \"-2px\", y: \"4px\" }}\r\n                        >\r\n                            Sign Up\r\n                        </motion.button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </motion.Card>\r\n            <div className = \"w-100 text-center mt-2\">\r\n                Already Have An Account ? <Link to=\"/login\" style={{color: \"#444\"}}>Log In</Link>\r\n            </div>   \r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Card, Form, Alert } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { motion } from 'framer-motion'\r\nimport { AnimatedText } from '../AnimatedText/AnimatedText'\r\nimport ParticlesBg from 'particles-bg'\r\n\r\nconst buttonVariants = {\r\n    hover:{\r\n        scale:1.06,\r\n        transition: {\r\n            duration:0.3,\r\n        },\r\n        textShadow: \"0px 0px 8px rgb(255,255,255)\",\r\n        boxShadow:\"0px 0px 8px rgb(255,255,255)\",\r\n    }\r\n}\r\n\r\nconst containerVariants = {\r\n    hidden: {\r\n        x: '100vw',\r\n        opacity: 0,\r\n\r\n    },\r\n    visible: {\r\n        opacity:1,\r\n        x:0,\r\n        transition:{\r\n            type:\"spring\",\r\n            delay: 0.5\r\n        }\r\n    },\r\n    exit:{\r\n        x: '-100vh',\r\n        transition:{\r\n            ease: 'easeInOut'\r\n        }\r\n    }\r\n}\r\n\r\n       \r\nexport default function Login() {\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n\r\n    const { login } = useAuth();\r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const history = useHistory();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try{\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to Login')\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <ParticlesBg color=\"#ffa62b\" type=\"cobweb\" bg={true}/>\r\n            <div className=\"heading\" style={{opacity:\"0.7\"}}>\r\n                <AnimatedText\r\n                    textColor = \"#ff4a4a\"\r\n                    overlayColor = \"#ffa62b\"\r\n                >\r\n                    FakeGram\r\n                </AnimatedText>\r\n            </div>\r\n            <motion.Card\r\n                variants={containerVariants}\r\n                initial= \"hidden\"\r\n                animate= \"visible\"\r\n                exit=\"exit\"\r\n            >\r\n                <Card.Body style={{margin:\"auto\",borderRadius: \"15px\", boxShadow:\"5px 3px 8px rgba(0, 0,0, 0.5)\",width:\"550px\" }}>\r\n                    <h2 className= \"text-center mb-4\" style={{color: \"#4e4e4e\"}} >Log In</h2>\r\n    \r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit = {handleSubmit} style={{maxWidth: \"450px\"}}>\r\n                        <Form.Group id=\"email\"> \r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\"> \r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required />\r\n                        </Form.Group>\r\n                        <motion.button disabled={loading} className=\"w-100 mt-2\" type=\"submit\"\r\n                            variants={buttonVariants}\r\n                            whileHover=\"hover\"\r\n                            whileTap={{ scale: 0.9, x: \"-2px\", y: \"4px\" }}\r\n                        >\r\n                            Log In\r\n                        </motion.button>\r\n                    </Form>\r\n                    <div className = \"w-100 text-center mt-2\">\r\n                    <Link to=\"/forgot-password\">\r\n                        <motion.button \r\n                            variants = {buttonVariants}\r\n                            whileHover = \"hover\"\r\n                            whileTap={{ scale: 0.9, x: \"-2px\", y: \"4px\" }}\r\n                        >\r\n                            Forgot Password\r\n                        </motion.button>\r\n                    </Link>\r\n                    </div>\r\n\r\n                </Card.Body>\r\n            </motion.Card>\r\n            <div className = \"w-100 text-center mt-2\">\r\n                Create New Account ? \r\n                <Link to=\"/signup\" style={{color: \"#444\"}}>Sign Up</Link>\r\n            </div>   \r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Card, Form, Alert } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { motion } from 'framer-motion'\r\nimport { AnimatedText } from '../AnimatedText/AnimatedText'\r\nimport ParticlesBg from 'particles-bg'\r\n\r\n\r\nconst buttonVariants = {\r\n    hover:{\r\n        scale:1.06,\r\n        transition: {\r\n            duration:0.3,\r\n        },\r\n        textShadow: \"0px 0px 8px rgb(255,255,255)\",\r\n        boxShadow:\"0px 0px 8px rgb(255,255,255)\",\r\n    }\r\n}\r\n\r\nconst containerVariants = {\r\n    hidden: {\r\n        x: '100vw',\r\n        opacity: 0\r\n    },\r\n    visible: {\r\n        opacity:1,\r\n        x:0,\r\n        transition:{\r\n            type:\"spring\",\r\n            delay: 0.5\r\n        }\r\n    },\r\n    exit:{\r\n        x: '-100vh',\r\n        transition:{\r\n            ease: 'easeInOut'\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default function UpdateProfile() {\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n\r\n    const { currentUser, updateEmail, updatePassword } = useAuth();\r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const history = useHistory()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError(\"Passwords do not match\")\r\n        }\r\n\r\n        const promises = [];\r\n        setLoading(true)\r\n        setError(\"\")\r\n\r\n        if(emailRef.current.value !== currentUser.email){\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n\r\n        if(passwordRef.current.value){\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n\r\n        Promise.all(promises).then(() => {\r\n            history.push(\"/\")\r\n        }).catch(() => {\r\n            setError('Failed To Update Account')\r\n        }).finally(() => {\r\n            setLoading(false)\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <ParticlesBg color=\"#ffa62b\" type=\"cobweb\" bg={true}/>\r\n            <div className=\"heading\" style={{opacity:\"0.7\"}} >\r\n                <AnimatedText\r\n                    textColor = \"#ff4a4a\"\r\n                    overlayColor = \"#ffa62b\"\r\n                >\r\n                    FakeGram\r\n                </AnimatedText>\r\n            </div>\r\n            <motion.Card\r\n                variants={containerVariants}\r\n                initial = \"hidden\"\r\n                animate = \"visible\"\r\n                exit = \"exit\"\r\n            >\r\n                <Card.Body style={{margin:\"auto\",borderRadius: \"15px\", boxShadow:\"5px 3px 8px rgba(0, 0,0, 0.5)\",width:\"550px\" }}>\r\n                    <h2 className= \"text-center mb-4\" style={{color: \"#4e4e4e\"}}>Update Profile</h2>\r\n    \r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit = {handleSubmit} style={{maxWidth: \"450px\"}}>\r\n                        <Form.Group id=\"email\"> \r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email}/>\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\"> \r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Leave Blank To Keep The Same\"/>\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\"> \r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordConfirmRef}  placeholder=\"Leave Blank To Keep The Same\"/>\r\n                        </Form.Group>\r\n                        <motion.button disabled={loading} className=\"w-100\" type=\"submit\"\r\n                            variants={buttonVariants}\r\n                            whileHover=\"hover\"\r\n                            whileTap={{ scale: 0.9, x: \"-2px\", y: \"4px\" }}\r\n                        >\r\n                            Update\r\n                        </motion.button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </motion.Card>\r\n            <div className = \"w-100 text-center mt-2\">\r\n                    <Link to=\"/\">\r\n                        <motion.button \r\n                            variants = {buttonVariants}\r\n                            whileHover = \"hover\"\r\n                            whileTap={{ scale: 0.9, x: \"-2px\", y: \"4px\" }}\r\n                        >\r\n                            Cancel\r\n                        </motion.button>\r\n                    </Link>\r\n            </div>   \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    \r\n    const { currentUser } = useAuth()\r\n    \r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n            }}\r\n        >\r\n        </Route>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst Title = () => {\r\n    return(\r\n        <div className = \"title\">\r\n            <h1>FakeGram</h1>\r\n            <h2>Your Pictures</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Title;\r\n","import { useState, useEffect } from 'react'\r\nimport { projectStorage, projectFirestore,timestamp } from '../firebase/config'\r\n\r\n//Custom Hook : useStorage();\r\n\r\n\r\nconst useStorage = (file) => {\r\n    const [progress,setProgress] = useState(null);\r\n    const [error,setError] = useState(null);\r\n    const [url,setUrl] = useState(null);\r\n\r\n    //Everytime the file is changed the useEfect function is called,\r\n    // The the Information Of the File is send t the Database and storage in the Firebase\r\n\r\n    useEffect(() => {\r\n        // references\r\n        const storageRef = projectStorage.ref(file.name);   // Reference for the Storage\r\n        const collectionRef = projectFirestore.collection('images');  //Reference for the Database \r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n        },(err) => {\r\n            setError(err);\r\n        }, async() => {  // when the file upload is finished we will take the URL of the image Uploaded\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp();\r\n            collectionRef.add({ url: url, createdAt }); // the database will have the two properties ie. first Time of creation and the the Url of the image\r\n            setUrl(url);\r\n        });\r\n        \r\n    },[file]);\r\n\r\n    return { progress, url, error }\r\n\r\n}\r\n\r\nexport default useStorage;\r\n","import React, { useEffect } from 'react'\r\nimport useStorage from '../hooks/useStorage'\r\nimport { motion } from 'framer-motion'\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n\r\n    const { progress, url } = useStorage(file);    // we get url and progress from the useStorage Hook that we create\r\n\r\n    //console.log(progress, url);\r\n    useEffect(() => {             // This useEffect() is for : when the upload is completed the progress bar removes autoatically\r\n        if(url){                  // We get the URL only when the File is uploaded fully.\r\n            setFile(null);        // And when we setFile(null)  the progressBar won't run as in Upload form the file paramete will null and progressBar will not run \r\n        }\r\n    }, [url, setFile])\r\n\r\n    return (\r\n        <motion.div className = \"progress-bar\" \r\n            initial = {{width: 0}}\r\n            animate = {{width: progress + '%'}}\r\n        >\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default ProgressBar;","import React, {useState} from 'react'\r\nimport ProgressBar from './ProgressBar'\r\n\r\n\r\nconst labelStyle = {\r\n    display: \"block\",\r\n    width: \"30px\",\r\n    height: \"30px\",\r\n    border: \"1px solid #e99d97\",\r\n    borderRadius: \"50%\",\r\n    margin: \"10px auto\",\r\n    lineHeight: \"30px\",\r\n    color: \"#e99d97\",\r\n    fontWeight: \"bold\",\r\n    fontSize: '24px'\r\n}\r\n\r\nconst UploadForm = () => {\r\n\r\n    const [file, setFile] =  useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const types = ['image/png', 'image/jpeg', 'image/jpg'];\r\n\r\n    const changeHandler = (e) => {\r\n        //console.log('changed');\r\n        let selected = e.target.files[0];   // to know the information of the file imported from the Computer\r\n        //console.log(selected);\r\n        if(selected && types.includes(selected.type)){\r\n            setFile(selected);\r\n            setError(null);\r\n        }else{\r\n            setFile(null);\r\n            setError('Please Select An Image File (png or jpeg)');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form>\r\n            <label style={\r\n                labelStyle\r\n            }>\r\n                <input type = \"file\" onChange = {changeHandler}/>\r\n                <span>+</span>\r\n            </label>\r\n            <div className = \"output\">\r\n                { error && <div className = \"error\"> {error} </div> }\r\n                { file && <div>{ file.name }</div> }\r\n                { file && <ProgressBar file = {file} setFile={setFile}/> }\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default UploadForm;\r\n","import { useState, useEffect } from 'react'\r\nimport { projectFirestore } from '../firebase/config'\r\n\r\n\r\nconst useFirestore = (collection) => {\r\n    const [docs,setDocs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsub = projectFirestore\r\n            .collection(collection)\r\n            .orderBy('createdAt', 'desc')\r\n            .onSnapshot((snap) =>{\r\n                let documents = [];\r\n                snap.forEach(doc => {\r\n                    documents.push({...doc.data(), id: doc.id})\r\n                });\r\n                setDocs(documents);\r\n            });\r\n\r\n        return () => unsub();   //cleanup function\r\n    },[collection]);\r\n\r\n    return { docs }\r\n};\r\n\r\n\r\n\r\nexport default useFirestore;","import React from 'react'\r\nimport useFirestore from '../hooks/useFirestore'\r\nimport { motion } from 'framer-motion'\r\nimport { projectFirestore } from '../firebase/config'\r\n\r\nconst ImageGrid = ({ setSelectedImage }) => {\r\n\r\n    const { docs } = useFirestore('images');\r\n\r\n   const deleteItem = (id,e) => {\r\n       if(e.target.className === 'closes'){\r\n        setSelectedImage(null);\r\n            projectFirestore\r\n            .collection('images')\r\n            .doc(id)\r\n            .delete();\r\n       }\r\n   }\r\n\r\n    const handleClick = (docUrl,e) => {\r\n        if(!e.target.classList.contains('closes')) {\r\n            setSelectedImage(docUrl);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className = \"img-grid\">\r\n            { docs && docs.map(doc => (\r\n                <motion.div \r\n                    whileHover = {{ opacity: 1}}\r\n                    layout\r\n                    className = \"img-wrap\" \r\n                    key={doc.id} \r\n                    onClick = {(e) => handleClick(doc.url,e)}\r\n                >\r\n                    <span  className =\"closes\" title=\"Delete\"\r\n                        onClick = {(e) => deleteItem(doc.id,e)}\r\n                    >&times;</span>\r\n                    <span className=\"likes\" title=\"Like\"\r\n                    \r\n                    >\r\n    \r\n                    </span>\r\n\r\n                    <motion.img src = {doc.url} alt = \"uploaded pic\"\r\n                        initial = {{opacity: 0}}\r\n                        animate = {{opacity: 1}}\r\n                        transition = {{delay: 1}}\r\n                    />\r\n                </motion.div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ImageGrid;\r\n","import React from 'react'\r\nimport { motion } from 'framer-motion'\r\n\r\nconst Modal = ({ selectedImage, setSelectedImage }) => {\r\n\r\n    const handleClick = (e) => {\r\n        if(e.target.classList.contains('backdrop')){\r\n            setSelectedImage(null);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <motion.div className = \"backdrop\" onClick = {handleClick}\r\n            initial =  {{ opacity: 0 }}\r\n            animate = {{ opacity : 1}}\r\n            style={{zIndex: 10}}\r\n        >\r\n            <motion.img src={selectedImage} alt= \"enlarged Pic\" \r\n                initial={{y:\"100vh\"}}\r\n                animate={{y: 0}}\r\n                transition={{ ease: \"easeInOut\", duration: 0.7 }}\r\n                style={{borderRadius: \"15px\"}}\r\n            />\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Alert } from 'react-bootstrap'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport Title from './Title'\r\nimport UploadForm from './UploadForm'\r\nimport ImageGrid from './ImageGrid'\r\nimport Modal from './Modal'\r\nimport { motion } from 'framer-motion'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst buttonVariants = {\r\n    hover:{\r\n        scale:1.06,\r\n        transition: {\r\n            duration:0.3,\r\n        },\r\n        textShadow: \"0px 0px 8px rgb(255,255,255)\",\r\n        boxShadow:\"0px 0px 8px rgb(255,255,255)\",\r\n    }\r\n}\r\n\r\nconst containerVariants = {\r\n    hidden: {\r\n        x: '100vw',\r\n        opacity: 0\r\n    },\r\n    visible: {\r\n        opacity:1,\r\n        x:0,\r\n        transition:{\r\n            type:\"spring\",\r\n            delay: 0.5\r\n        }\r\n    },\r\n    exit:{\r\n        x: '-100vh',\r\n        transition:{\r\n            ease: 'easeInOut'\r\n        }\r\n    }\r\n}\r\n\r\nexport default function DashBoard() {\r\n    const [error, setError] = useState(\"\")\r\n    const { logout } = useAuth()\r\n    const history = useHistory();\r\n    const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try{\r\n            await logout()\r\n            history.push(\"/login\")\r\n        }catch{\r\n            setError('Failed To Log Out')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className = \"App\"\r\n                variants={containerVariants}\r\n                initial= \"hidden\"\r\n                animate= \"visible\" \r\n                exit=\"exit\"\r\n            >\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Title />\r\n                <UploadForm />\r\n                <ImageGrid setSelectedImage ={setSelectedImage}/>\r\n                { selectedImage && <Modal selectedImage = {selectedImage} setSelectedImage={setSelectedImage}/>}\r\n                <div className = \"w-100 text-center mt-2 next\">\r\n                    <Grid container>\r\n                        <Grid items xs={6}>\r\n                            <Link to=\"/update\">\r\n                                <motion.button \r\n                                    variants = {buttonVariants}\r\n                                    whileHover = \"hover\"\r\n                                    whileTap={{ scale: 0.9, x: \"-2px\", y: \"4px\" }}\r\n                                >\r\n                                    Update Profile\r\n                                </motion.button>\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid items xs={6}>\r\n                            <motion.button \r\n                                onClick={handleLogout} \r\n                                variants= {buttonVariants}\r\n                                whileHover= \"hover\"\r\n                                whileTap={{ scale: 0.9, x: \"-2px\", y: \"4px\" }}\r\n                            >\r\n                                Log Out\r\n                            </motion.button>\r\n                        </Grid>\r\n                    </Grid>    \r\n                </div>\r\n                <div className = \"w-100 text-center mt-2 next\">\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n\r\n        </>\r\n    )\r\n\r\n}\r\n      \r\n","import React, { useRef, useState } from 'react'\r\nimport { Card, Form, Alert } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { motion } from 'framer-motion'\r\n\r\n\r\nconst buttonVariants = {\r\n    hover:{\r\n        scale:1.06,\r\n        transition: {\r\n            duration:0.3,\r\n        },\r\n        textShadow: \"0px 0px 8px rgb(255,255,255)\",\r\n        boxShadow:\"0px 0px 8px rgb(255,255,255)\",\r\n    }\r\n}\r\n\r\nconst containerVariants = {\r\n    hidden: {\r\n        x: '100vw',\r\n        opacity: 0\r\n    },\r\n    visible: {\r\n        opacity:1,\r\n        x:0,\r\n        transition:{\r\n            type:\"spring\",\r\n            delay: 0.5\r\n        }\r\n    },\r\n    exit:{\r\n        x: '-100vh',\r\n        transition:{\r\n            ease: 'easeInOut'\r\n        }\r\n    }\r\n}\r\n\r\nexport default function ForgotPasaword() {\r\n\r\n    const emailRef = useRef();\r\n\r\n    const { resetPassword } = useAuth();\r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false)\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        try{\r\n            setMessage(\"\")\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check Your Inbox For Further Instuctions')\r\n        } catch {\r\n            setError('Failed to Reset Password')\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <motion.Card\r\n                variants={containerVariants}\r\n                initial = \"hidden\"\r\n                animate = \"visible\"\r\n                exit=\"exit\"\r\n            >\r\n                <Card.Body style={{margin:\"auto\",borderRadius: \"15px\", boxShadow:\"5px 3px 8px rgba(0, 0,0, 0.5)\",width:\"550px\" }}>\r\n                    <h2 className= \"text-center mb-4\" style={{color: \"#4e4e4e\"}}>Password Reset</h2>\r\n    \r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    {message && <Alert variant= \"success\">{message}</Alert> }\r\n                    \r\n                    <Form onSubmit = {handleSubmit} style={{maxWidth: \"450px\"}}>\r\n                        <Form.Group id=\"email\"> \r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required />\r\n                        </Form.Group>\r\n    \r\n                        <motion.button disabled={loading} className=\"w-100\" type=\"submit\"\r\n                            variants={buttonVariants}\r\n                            whileHover=\"hover\"\r\n                            whileTap={{ scale: 0.9, x: \"-2px\", y: \"4px\" }}\r\n                        >\r\n                            Reset Password\r\n                        </motion.button>\r\n                    </Form>\r\n                    <div className = \"w-100 text-center mt-2\">\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </motion.Card>\r\n            <div className = \"w-100 text-center mt-2\">\r\n                Create New Account ? <Link to=\"/signup\" style={{color: \"#444\"}}>Sign Up</Link>\r\n            </div>   \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Signup from './components/SignUp'\r\nimport Login from './components/Login'\r\nimport UpdateProfile from './components/UpdateProfile'\r\nimport PrivateRoute from './components/PrivateRoute'\r\nimport DashBoard from './components/DashBoard'\r\nimport ForgotPassword from './components/ForgotPassword'\r\n\r\nimport { Container } from 'react-bootstrap'\r\nimport { AuthProvider } from './contexts/AuthContext'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport { AnimatePresence } from 'framer-motion'\r\n\r\n\r\nfunction App() {\r\n    return(\r\n        <AnimatePresence exitBeforeEnter>\r\n\r\n            <Container \r\n            className = \"d-flex align-items-center justify-content-center\"\r\n            style={{ minHeight: \"100vh\" , fontFamily: \"Comfortaa\"}}\r\n            >\r\n                <div className = \"w-100\" style = {{ maxWidth:\"800px\" }}>\r\n                    <Router basename={process.env.PUBLIC_URL}>\r\n                        <AuthProvider>\r\n                            <Switch>\r\n                                <Route exact path=\"/fakegram\" component={() => (<Redirect to='/login' />)} />\r\n                                <PrivateRoute exact path=\"/\" component={DashBoard}/>\r\n                                <PrivateRoute  path=\"/update\" component={UpdateProfile}/>\r\n                                <Route path=\"/signup\" component={Signup}/>\r\n                                <Route path=\"/login\" component={Login} />\r\n                                <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n                            \r\n                            </Switch>\r\n                        </AuthProvider>\r\n                    </Router>\r\n                </div>\r\n            </Container>\r\n\r\n        </AnimatePresence>\r\n    )\r\n\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.querySelector('#root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}